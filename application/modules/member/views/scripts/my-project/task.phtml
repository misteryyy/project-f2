<?php 
// The main project navigation
$this->step = 7;
echo $this->partial('my-project/my-project-navigation.phtml',array("step" => $this->step,"project" => $this->project));
?>

Level
<hr>
<?php echo $this->form;?>



<hr />
<h3>Tasks <span class="badge badge-success">for level <?php echo $this->project->level;?></span></h3>
<div id="alert-area"></div>	

<h4>Create new task for current level : <?php echo $this->project->level;?></h4>
<!-- Form for creating new task -->
<form id="form-create-task" class="well form-search" action="#" method="post" autocomplete="off">
			<div class="control-group">
				<div class="controls">
						<input type="hidden" name="level" value="<?php echo $this->project->level;?>" />
						<input type="text" name="task" placeholder="write your task for this level" class="input-xlarge" id="input-task-create"/>
					
				</div>
			</div>
		<!-- cant change or add div, because its looking in the script for this-->
		<input type="submit" class="btn btn-primary create"  name='submit' data-toggle="button" data-loading-text="processing..." value="create task" />						
    </form>

    <!-- Add data-toggle="buttons-checkbox" for checkbox style toggling on btn-group -->
 	<hr>   
 	
 	<ol id="question_list">
	<table id ="question_list" class="table">
		<tr> <td>
		<script id="question_list_template" type="text/x-handlebars-template">
				{{#each this}}				
					<form method="post" action="" class="form-search" data-question_id="{{id}}">
						<input  class="finish" type="checkbox" name="finished" {{#if finished}}
  						checked="checked"
  						{{/if}}
						 />
						<input type="hidden" name="task_id" value="{{id}}" />
						<input  type="text" name="task" value="{{task}}" />
						<input  class="btn btn-success update" type="submit"  data-loading-text="processing..." value="edit" name="submit" />
						<input class="btn  btn-danger delete" type="submit"  data-loading-text="processing..." value="x" name="submit" />
						</form>
				{{/each}}

		</script>
			</td>
		</tr>
	</table>
	</ol>
			
	<div id="question_info">
		<script id="question_info_template" type="text/x-handlebars-template">
					<div class="well">
						{{question}} has id {{id}}
					</div>
		</script>
	</div>
		
<!-- <script src="http://cloud.github.com/downloads/wycats/handlebars.js/handlebars-1.0.0.beta.6.js"></script>
      --> 
<script src="/media/tools/handlebars-1.0.0.beta.6.js"></script>
       
       
       
        <script type="text/javascript">  	

			var Questions = {

			init: function(config){
				// ajax setup
				$.ajaxSetup({
					url: "/member/my-project/ajax-task/id/<?php echo $this->project->id;?>", 
					type: 'POST',
					dataType: 'json',
				});
				
				this.config = config;
				this.bindEvents();
				this.setutTemplates();
				this.findQuestions(); // fill the question_list
				},
			// setting template system
			setutTemplates: function(){
				this.config.questionListTemplate = Handlebars.compile(this.config.questionListTemplate);
				this.config.QuestionInfoTemplate = Handlebars.compile(this.config.QuestionInfoTemplate);
			
				},
				
			bindEvents: function(){
				this.config.questionList.on('click','form input.update',this.updateQuestion); // edit question 
				this.config.questionList.on('click','form input.delete',this.deleteQuestion); // delete question
				this.config.questionList.on('click','form input.finish',this.finishTask); // complete question
				this.config.formCreate.on('click','input.create',this.createQuestion); // create new question
				
				},
				
			findQuestions: function(){
				 var self = Questions;
					
				 $.ajax({
				 	data: "_method=findAllForCurrentLevel",// take data from the form and send it to the method delete
					 }).done(
						function (results){
				 			self.config.questionList.empty();
							if(results.data[0]){
								self.config.questionList.append(self.config.questionListTemplate(results.data));
								//newAlert (results.respond, results.message)
							}else{
								self.config.questionList.append("No tasks.");
								
							}
				 		}
				 );	
	
				},

				// finish task
				finishTask:function(e){
					var self = Questions;
					var form = $(this).parent(); // directly this form
					//create method
					 $.ajax({
					 	data: form.serialize() + "&_method=finish", // take data from the form and send it to the method delete
					 }).done(
							function (results){
					 			newAlert (results.respond, results.message); // display alert
					 			//self.findQuestions(); // refresh questions
					 			//form.each (function(){
	  							//			this.reset();
								//});
					 		}
					 );
					
					// e.preventDefault();
				},	
				
			// create question
			createQuestion:function(e){
				var self = Questions;
				var but  = $(this).button('toggle');
				but.button('loading');
				var form = $(this).parent(); // directly this form
				//create method
				 $.ajax({
				 	data: form.serialize() + "&_method=create", // take data from the form and send it to the method delete
				 }).done(
						function (results){
				 			newAlert (results.respond, results.message); // display alert
				 			self.findQuestions(); // refresh questions
				 			but.button('reset');
				 			form.each (function(){
  										this.reset();
							});
				 		}
				 );
				
				 e.preventDefault();
			},	

			// delete task
			deleteQuestion:function(e){
				var self = Questions;
				$(this).button('loading');
				var form = $(this).parent();
				//delete method
				$.ajax({
					data:  form.serialize() + "&_method=delete", // take data from the form and send it to the method delete
				}).done(
						function (results){
							newAlert (results.respond, results.message); // display alert
							self.findQuestions(); // refresh questions
						}
				);
				e.preventDefault();
			},	

			// update question
			updateQuestion:function(e){
				var self = Questions;
				var form = $(this).parent();
				$(this).button('loading');
				console.log($(this));
				//delete method
				$.ajax({
					data:  form.serialize() + "&_method=update", // take data from the form and send it to the method update
				}).done(
						function (results){
							newAlert (results.respond, results.message); // display alert
							self.findQuestions(); // refresh questions
						}
				);
				e.preventDefault();
			},	

			};

			Questions.init({
				formCreate: $('#form-create-task'),
				questionListTemplate: $('#question_list_template').html(),
				questionList: $("#question_list"),
				questionInfo :  $("#question_info"),
				QuestionInfoTemplate :  $("#question_info_template"),

				
			});

 </script>  